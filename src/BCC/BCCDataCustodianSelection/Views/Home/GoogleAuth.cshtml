@model DataCustodianModel

@{
    ViewData["Title"] = "Home Page";
}

<script>
    function selectionchange() {
        var e = document.getElementById("mySelect");
        var str = e.options[e.selectedIndex].value;

        if (str == 'Google Fit') {
            document.getElementById('datatypeselect').style.display = 'block';
            document.getElementById('googlefit').style.display = 'none';
            document.getElementById('fitbit').style.display = 'block';
        }
        else if (str == 'Fitbit') {
            document.getElementById('datatypeselect').style.display = 'block';
            document.getElementById('googlefit').style.display = 'block';
            document.getElementById('fitbit').style.display = 'none';
        }
        else {
            document.getElementById('datatypeselect').style.display = 'none';
        }
    }
</script>




<form method="post">

    // G O O G L E

    // https://developers.google.com/identity/protocols/OAuth2WebServer
    // STEPS:
    // 1. Your application identifies the permissions it needs.
    // 2. Your application redirects the user to Google along with the list of requested permissions.
    // The user decides whether to grant the permissions to your application.
    // Your application finds out what the user decided.
    // If the user granted the requested permissions, your application retrieves tokens needed to make API requests on the user's behalf.

    // STEP 1: PERMISSIONS / SCOPES
    // https://developers.google.com/fit/rest/v1/authorization

    // https://www.googleapis.com/auth/fitness.activity.read
    //      - com.google.step_count.delta
    // https://www.googleapis.com/auth/fitness.blood_glucose.read
    // https://www.googleapis.com/auth/fitness.blood_pressure.read
    // https://www.googleapis.com/auth/fitness.body.read
    //      - com.google.heart_rate.bpm
    //      - com.google.height
    //      - com.google.weight
    // https://www.googleapis.com/auth/fitness.body_temperature.read
    // https://www.googleapis.com/auth/fitness.location.read
    // https://www.googleapis.com/auth/fitness.nutrition.read
    // https://www.googleapis.com/auth/fitness.oxygen_saturation.read
    // https://www.googleapis.com/auth/fitness.reproductive_health.read

    // STEP 2: Redirect to Google along with requested permissions
    // OAuth 2.0 Endpoint: https://accounts.google.com/o/oauth2/v2/auth
    // Parameters:
    //      (necessary)
    //      client_id: 446983905302-uuv9ap7s6poee19ksl4fkad4c5r9d0b3.apps.googleusercontent.com (test-client 1 - My test project)
    //      We should all use the same client_id

    //      redirect_uri: This will be where the service redirects to once it's done. What this means is that we cannot accurately test this until we have it hosted on a website.
    //      http://secretwaterfall.club/

    //      scope: A space-delimited list of scopes that identify the resources that your application could access on the user's behalf (see above)
    //      (unnecessary)

    //      // mebbe no access_type: suggest we use value of 'offline' for this prototype

    //      response_type: token

    //      prompt: use value of 'consent' to display consent prompt

    // Example REST request with line breaks for readability:
    // https://accounts.google.com/o/oauth2/v2/auth?
    //    scope=https%3A%2F%2Fwww.googleapis.com%2Fauth%2Ffitness.body.read%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Ffitness.activity.read&
    //    redirect_uri=https%3A%2F%2Fgetpostman.com
    //    response_type=token&
    //    client_id=446983905302-uuv9ap7s6poee19ksl4fkad4c5r9d0b3.apps.googleusercontent.com

    // https://accounts.google.com/o/oauth2/v2/auth?scope=https%3A%2F%2Fwww.googleapis.com%2Fauth%2Ffitness.body.read%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Ffitness.activity.read&redirect_uri=https%3A%2F%2Fgetpostman.com&response_type=token&client_id=446983905302-uuv9ap7s6poee19ksl4fkad4c5r9d0b3.apps.googleusercontent.com

    // response: https://www.getpostman.com/#access_token=ya29.GltqBxlm9Rod-GVoepnFvuQZbKW-JWME-b61lJKvCeDveeGh76VKNBzHTjjpAGgU2oPd2NN4NA6FkIdEXFZ0OBknEPcwd4PV5DI-iyIJ5tsj79TwA4ZUHppOzZFU&token_type=Bearer&expires_in=3600&scope=https://www.googleapis.com/auth/fitness.activity.read%20https://www.googleapis.com/auth/fitness.body.read


    // F I T  B I T

    // Step 1: Parameters/Scopes

    // REST URL: https://www.fitbit.com/oauth2/authorize

    // Params
    // client_ID : required :
    // response_type : required : token
    // scope : required : %20 (whitespace) delimited
    //      activity
    //      heartrate
    //      nutrition
    //      sleep
    //      weight
    // redirect_uri : required unless we have only one URI setup on dev.fitbit.com : URIs to be setup on dev.fitbit.com
    // expires_in : optional : Number of seconds. Defaults to 86400 (one day). Can be set to anything
    //

    // construct:
    // https://www.fitbit.com/oauth2/authorize?
    // client_id=22B74V&
    // response_type=token&
    // scope=activity%20heartrate%20nutrition%20sleep%20weight&
    // redirect_uri=https%3A%2F%2Fauthorization.secretwaterfall.club&
    // expires_in=60

    // my example: https://www.fitbit.com/oauth2/authorize?client_id=22B74V&response_type=token&scope=activity%20heartrate%20nutrition%20sleep%20weight&redirect_uri=https%3A%2F%2Fauthorization.secretwaterfall.club&expires_in=60

    // example response: https://authorization.secretwaterfall.club/#access_token=eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyMkI3NFYiLCJzdWIiOiI3RkJEWDgiLCJpc3MiOiJGaXRiaXQiLCJ0eXAiOiJhY2Nlc3NfdG9rZW4iLCJzY29wZXMiOiJyc29jIHJzZXQgcmFjdCBybG9jIHJ3ZWkgcmhyIHJudXQgcnBybyByc2xlIiwiZXhwIjoxNTY2ODY0MDgyLCJpYXQiOjE1NjYyNTkyODJ9.E06onaBZ7xT3GUUBImixI6e9xAZxIc5iiqLKxniN0Kg&user_id=7FBDX8&scope=settings+social+weight+location+sleep+nutrition+profile+activity+heartrate&token_type=Bearer&expires_in=604800
</form>
